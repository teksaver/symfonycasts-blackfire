# This is a sample .blackfire.yaml file created by Blackfire.
# You can read more about .blackfire.yaml here: https://blackfire.io/docs/cookbooks/tests
metrics:
    app.user_activity_calculation:
        label: "User activity calculation"
        timeline: true
        marker: true
        matching_calls:
            php:
                -
                    callee: '=App\Service\CommentHelper::countRecentCommentsForUser'

    app.agree_to_terms:
        label: "Agree to terms"
        matching_calls:
            php:
                -
                    caller: '=App\EventSubscriber\AgreeToTermsSubscriber::onRequestEvent'
                    callee: '|Symfony\Component\Form\FormFactoryInterface::create'

tests:
    "The homepage should be fast":
        path: "/"
        assertions:
            - "main.wall_time <= 300ms"

    "The number of created entities should be reasonable":
        path: "/.*"
        assertions:
            - "metrics.entities.created.count < 50"

    "The homepage should have a limited number of SQL queries":
        path: "/"
        assertions:
            - "metrics.sql.queries.count <= 5"


    "The autoloader classmap should be dumped":
        path: "/.*"
        assertions:
            - "metrics.composer.autoload.find_file.count == 0"

    "User activity calculation should be cached":
        path: "/sighting/.*"
        assertions:
            - "metrics.app.user_activity_calculation.count == 0"

    "User should already have agreed to terms":
        path: "/.*"
        assertions:
            - "metrics.app.agree_to_terms.count == 0"

    "Github API should be called only once":
        path: "/api/github-organization"
        assertions:
            - "metrics.http.requests.count == 1"

# For writing scenarios, take a look at the documentation
# https://blackfire.io/docs/cookbooks/scenarios
scenarios: |
    #!blackfire-player

    name "BigFoot Sightings Scenarios"

    group login
        visit url("/login")
            name "Login page"
            set user_login css('form.mb-5 div.pb-2 > code:nth-child(1)').text()
            set user_password css('form.mb-5 div.pb-2 > code:nth-child(2)').text()

        submit button("Sign in")
            name "Authenticate"
            param email user_login
            param password user_password

        follow
            expect css('nav.navbar ul.navbar-nav > li.nav-item:nth-child(3) a.nav-link').text() == ' Log Out'

    group regular_visit
        visit url("/")
            name "Homepage"
            expect status_code() == 200
            expect css("tbody.js-sightings-list tr").count() > 10

        # Click on the 3rd link from the list.
        click css('.js-sightings-list > tr:nth-child(3) a')
            name "First sighting page"
            expect status_code() == 200

        visit url("/about")
            name "About page"
            expect status_code() == 200
            expect css('div.top-nav h1.mt-5').text() == 'Bigfoot is out there'

    group xhr_requests
        # Data displayed in the sidebar
        visit url("/api/github-organization")
            expect json("organization.name") == "SymfonyCasts"
            expect json("organization.repositoryCount") > 0

        # 2nd page of sightings
        visit url("/_sightings?page=2")
            expect json("html") != ""
            expect json("next") == 3

    scenario
        name "Anonymous Visit"

        include regular_visit
        include xhr_requests


    scenario
        name "Authenticated Visit"
        include login
        include regular_visit
        include xhr_requests
